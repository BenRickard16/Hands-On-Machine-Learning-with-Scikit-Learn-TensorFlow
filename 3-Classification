{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30775,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# MNIST Handwriting Classification\n","metadata":{}},{"cell_type":"code","source":"# Downloading the MNIST dataset\nfrom sklearn.datasets import fetch_openml\nmnist = fetch_openml('mnist_784', as_frame=False)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-21T14:11:50.390842Z","iopub.execute_input":"2024-10-21T14:11:50.391362Z","iopub.status.idle":"2024-10-21T14:12:14.791034Z","shell.execute_reply.started":"2024-10-21T14:11:50.391317Z","shell.execute_reply":"2024-10-21T14:12:14.789780Z"},"trusted":true},"outputs":[],"execution_count":2},{"cell_type":"code","source":"mnist.keys()","metadata":{"execution":{"iopub.status.busy":"2024-10-21T14:12:31.867921Z","iopub.execute_input":"2024-10-21T14:12:31.868469Z","iopub.status.idle":"2024-10-21T14:12:31.878048Z","shell.execute_reply.started":"2024-10-21T14:12:31.868408Z","shell.execute_reply":"2024-10-21T14:12:31.876745Z"},"trusted":true},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"dict_keys(['data', 'target', 'frame', 'categories', 'feature_names', 'target_names', 'DESCR', 'details', 'url'])"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"X, y = mnist['data'], mnist['target']\nprint(X.shape, y.shape)","metadata":{"execution":{"iopub.status.busy":"2024-10-21T14:12:33.433412Z","iopub.execute_input":"2024-10-21T14:12:33.434029Z","iopub.status.idle":"2024-10-21T14:12:33.440816Z","shell.execute_reply.started":"2024-10-21T14:12:33.433973Z","shell.execute_reply":"2024-10-21T14:12:33.439558Z"},"trusted":true},"outputs":[{"name":"stdout","text":"(70000, 784) (70000,)\n","output_type":"stream"}],"execution_count":4},{"cell_type":"markdown","source":"There are 70,000 images with 784 features (28x28 pixels)\n","metadata":{}},{"cell_type":"code","source":"# Viewing one of the images\n%matplotlib inline\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nsome_digit=X[30000]\nsome_digit_image = some_digit.reshape(28, 28)\nplt.imshow(some_digit_image, cmap=matplotlib.cm.binary, interpolation='nearest')\nplt.axis('off')\nplt.show()\n\ny[30000]","metadata":{"execution":{"iopub.status.busy":"2024-10-21T14:12:36.175074Z","iopub.execute_input":"2024-10-21T14:12:36.175620Z","iopub.status.idle":"2024-10-21T14:12:36.334255Z","shell.execute_reply.started":"2024-10-21T14:12:36.175572Z","shell.execute_reply":"2024-10-21T14:12:36.332933Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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"},"metadata":{}},{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"'3'"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"# The dataset is already split into train and test as first 60,000 for train and the rest for test\nX_train, X_test, y_train, y_test = X[:60000], X[60000:], y[:60000], y[60000:]","metadata":{"execution":{"iopub.status.busy":"2024-10-21T14:12:39.053351Z","iopub.execute_input":"2024-10-21T14:12:39.053865Z","iopub.status.idle":"2024-10-21T14:12:39.060160Z","shell.execute_reply.started":"2024-10-21T14:12:39.053817Z","shell.execute_reply":"2024-10-21T14:12:39.058724Z"},"trusted":true},"outputs":[],"execution_count":6},{"cell_type":"code","source":"# We shuffle the train set so we get a spread of digits\nimport numpy as np\n\nshuffle_index = np.random.permutation(60000)\nX_train, y_train = X_train[shuffle_index], y_train[shuffle_index]","metadata":{"execution":{"iopub.status.busy":"2024-10-21T14:12:40.511675Z","iopub.execute_input":"2024-10-21T14:12:40.512153Z","iopub.status.idle":"2024-10-21T14:12:41.338274Z","shell.execute_reply.started":"2024-10-21T14:12:40.512110Z","shell.execute_reply":"2024-10-21T14:12:41.337112Z"},"trusted":true},"outputs":[],"execution_count":7},{"cell_type":"markdown","source":"# Training a Binary Classifier","metadata":{}},{"cell_type":"code","source":"# Testing for 5 or not 5\ny_train_5 = (y_train == '5')\ny_test_5 = (y_test == '5')","metadata":{"execution":{"iopub.status.busy":"2024-10-21T14:12:44.456931Z","iopub.execute_input":"2024-10-21T14:12:44.458156Z","iopub.status.idle":"2024-10-21T14:12:44.465512Z","shell.execute_reply.started":"2024-10-21T14:12:44.458099Z","shell.execute_reply":"2024-10-21T14:12:44.463961Z"},"trusted":true},"outputs":[],"execution_count":8},{"cell_type":"code","source":"# Use a Stochastic Gradient Descent classifier and train on the whole training set\nfrom sklearn.linear_model import SGDClassifier\n\nsgd_clf = SGDClassifier(random_state=42)\nsgd_clf.fit(X_train, y_train_5)","metadata":{"execution":{"iopub.status.busy":"2024-10-21T14:12:46.725163Z","iopub.execute_input":"2024-10-21T14:12:46.725688Z","iopub.status.idle":"2024-10-21T14:13:11.473240Z","shell.execute_reply.started":"2024-10-21T14:12:46.725639Z","shell.execute_reply":"2024-10-21T14:13:11.471838Z"},"trusted":true},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"SGDClassifier(random_state=42)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDClassifier</label><div class=\"sk-toggleable__content\"><pre>SGDClassifier(random_state=42)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"sgd_clf.predict([some_digit])","metadata":{"execution":{"iopub.status.busy":"2024-10-21T14:13:19.096420Z","iopub.execute_input":"2024-10-21T14:13:19.096946Z","iopub.status.idle":"2024-10-21T14:13:19.106520Z","shell.execute_reply.started":"2024-10-21T14:13:19.096905Z","shell.execute_reply":"2024-10-21T14:13:19.105135Z"},"trusted":true},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"array([False])"},"metadata":{}}],"execution_count":10},{"cell_type":"markdown","source":"# Performance Measures","metadata":{}},{"cell_type":"code","source":"# Evaluate the SGD Classifier with K-fold CV with 3 folds\nfrom sklearn.model_selection import cross_val_score\ncross_val_score(sgd_clf, X_train, y_train_5, cv=3, scoring='accuracy')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-21T14:15:03.982410Z","iopub.execute_input":"2024-10-21T14:15:03.982930Z","iopub.status.idle":"2024-10-21T14:15:46.884184Z","shell.execute_reply.started":"2024-10-21T14:15:03.982889Z","shell.execute_reply":"2024-10-21T14:15:46.882691Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"array([0.96715, 0.9629 , 0.9659 ])"},"metadata":{}}],"execution_count":11},{"cell_type":"markdown","source":"95% seems good accuracy, but lets check a dumb classifier which assigns every image as 'not 5'","metadata":{}},{"cell_type":"code","source":"# Dumb classifier model\nfrom sklearn.base import BaseEstimator\n\nclass Never5Classifier(BaseEstimator):\n    def fit(self, X, y=None):\n        pass\n    def predict(self, X):\n        return np.zeros((len(X), 1), dtype=bool)\n    ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-21T14:17:52.767722Z","iopub.execute_input":"2024-10-21T14:17:52.768212Z","iopub.status.idle":"2024-10-21T14:17:52.775038Z","shell.execute_reply.started":"2024-10-21T14:17:52.768166Z","shell.execute_reply":"2024-10-21T14:17:52.773615Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"# Testing the model's accuracy\nnever_5_clf = Never5Classifier()\ncross_val_score(never_5_clf, X_train, y_train_5, cv=3, scoring='accuracy')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-21T14:18:53.317162Z","iopub.execute_input":"2024-10-21T14:18:53.317693Z","iopub.status.idle":"2024-10-21T14:18:53.897009Z","shell.execute_reply.started":"2024-10-21T14:18:53.317646Z","shell.execute_reply":"2024-10-21T14:18:53.895622Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"array([0.91095, 0.9084 , 0.9096 ])"},"metadata":{}}],"execution_count":14},{"cell_type":"markdown","source":"Gives 90% accuracy as only about 10% of the images are '5's","metadata":{}},{"cell_type":"code","source":"# cross_val_predict returns the predictions made on each test fold\nfrom sklearn.model_selection import cross_val_predict\n\ny_train_pred = cross_val_predict(sgd_clf, X_train, y_train_5, cv=3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-21T14:21:14.972890Z","iopub.execute_input":"2024-10-21T14:21:14.973340Z","iopub.status.idle":"2024-10-21T14:21:57.933406Z","shell.execute_reply.started":"2024-10-21T14:21:14.973295Z","shell.execute_reply":"2024-10-21T14:21:57.931999Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"# Now we can produce a confusion matrix\nfrom sklearn.metrics import confusion_matrix\n\nconfusion_matrix(y_train_5, y_train_pred)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-21T14:22:37.692426Z","iopub.execute_input":"2024-10-21T14:22:37.692876Z","iopub.status.idle":"2024-10-21T14:22:37.714134Z","shell.execute_reply.started":"2024-10-21T14:22:37.692833Z","shell.execute_reply":"2024-10-21T14:22:37.712893Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"array([[54237,   342],\n       [ 1739,  3682]])"},"metadata":{}}],"execution_count":16},{"cell_type":"markdown","source":"Non-5 on the top row, so 54237 correctly identified as not 5, and 3682 correctly idenitified as 5","metadata":{}},{"cell_type":"markdown","source":"**Precision and Recall**","metadata":{}},{"cell_type":"code","source":"# Calculating the precision and recall\nfrom sklearn.metrics import precision_score, recall_score\n\nprecision_score(y_train_5, y_train_pred)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-21T14:26:22.279395Z","iopub.execute_input":"2024-10-21T14:26:22.280047Z","iopub.status.idle":"2024-10-21T14:26:22.314668Z","shell.execute_reply.started":"2024-10-21T14:26:22.279995Z","shell.execute_reply":"2024-10-21T14:26:22.313113Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"0.9150099403578529"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"recall_score(y_train_5, y_train_pred)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-21T14:26:25.056625Z","iopub.execute_input":"2024-10-21T14:26:25.057038Z","iopub.status.idle":"2024-10-21T14:26:25.088239Z","shell.execute_reply.started":"2024-10-21T14:26:25.056998Z","shell.execute_reply":"2024-10-21T14:26:25.086878Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"0.6792104777716288"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"# Compute the F_1 score\nfrom sklearn.metrics import f1_score\nf1_score(y_train_5, y_train_pred)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-21T14:27:25.713074Z","iopub.execute_input":"2024-10-21T14:27:25.713582Z","iopub.status.idle":"2024-10-21T14:27:25.750937Z","shell.execute_reply.started":"2024-10-21T14:27:25.713533Z","shell.execute_reply":"2024-10-21T14:27:25.749564Z"}},"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"0.7796717840127052"},"metadata":{}}],"execution_count":22}]}